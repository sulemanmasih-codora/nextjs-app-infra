name: Get EC2 IP Address

on:
  workflow_dispatch:
    inputs:
      ec2_instance_name:
        description: 'The name of the EC2 instance'
        required: true
      apply_changes:
        description: 'Apply changes (true/false)'
        default: 'false'

jobs:
  get-ec2-ip:
    runs-on: ubuntu-latest
    environment: ${{ steps.determine_env.outputs.ENV_NAME }}  # Use the output from determine_env

    steps:
      - name: Determine Environment
        id: determine_env
        run: |
          EC2_INSTANCE_NAME="${{ github.event.inputs.ec2_instance_name }}"
          case $EC2_INSTANCE_NAME in
            *lexim-dev*) ENV_NAME="lexim-dev" ;;
            *lexim-stage*) ENV_NAME="lexim-stage" ;;
            *lexim-prod*) ENV_NAME="lexim-prod" ;;
            *) 
              echo "Unknown environment for EC2 instance: $EC2_INSTANCE_NAME"
              exit 1
              ;;
          esac
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT  # Output the environment name for later steps

      - name: Debug AWS Secrets
        run: |
          if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "AWS_ACCESS_KEY_ID is not set"
          else
            echo "AWS_ACCESS_KEY_ID is set"
          fi
          
          if [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
            echo "AWS_SECRET_ACCESS_KEY is not set"
          else
            echo "AWS_SECRET_ACCESS_KEY is set"
          fi
          
          if [ -z "${{ secrets.AWS_REGION }}" ]; then
            echo "AWS_REGION is not set"
          else
            echo "AWS_REGION is set"
          fi

      - name: Set up AWS CLI (Using AWS Secrets)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
