name: Get EC2 IP Address

on:
  workflow_dispatch:
    inputs:
      ec2_instance_name:
        description: 'The name of the EC2 instance'
        required: true
      apply_changes:
        description: 'Apply changes (true/false)'
        default: 'false'
jobs:
  get-ec2-ip:
    runs-on: ubuntu-latest

    steps:
    - name: Determine Environment
      id: determine_env
      run: |
        EC2_INSTANCE_NAME="${{ github.event.inputs.ec2_instance_name }}"
        
        case $EC2_INSTANCE_NAME in
          *lexim-dev*) ENV_NAME="lexim-dev" ;;
          *lexim-stage*) ENV_NAME="lexim-stage" ;;
          *lexim-prod*) ENV_NAME="lexim-prod" ;;
          *custody-dev*) ENV_NAME="custody-dev" ;;
          *custody-stage*) ENV_NAME="custody-stage" ;;
          *dau-vault-prod*) ENV_NAME="dau-vault-prod" ;;
          *tcp-prod*) ENV_NAME="tcp-prod" ;;
          *tcp-dev*) ENV_NAME="tcp-dev" ;;
          *dbg-prod*) ENV_NAME="dbg-prod" ;;
          *dbg-stage*) ENV_NAME="dbg-stage" ;;
          *dbg-dev*) ENV_NAME="dbg-dev" ;;
          *) 
            echo "Unknown environment for EC2 instance: $EC2_INSTANCE_NAME"
            exit 1
            ;;
        esac

        echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV

    - name: Set up AWS CLI (Same AWS Secrets for All Environments)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'eu-west-1'

    - name: Debug AWS Secrets
      run: |
        echo "AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}"
        echo "AWS_SECRET_ACCESS_KEY: (masked)"

    - name: Retrieve EC2 IP Address
      id: get_ip
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=${{ github.event.inputs.ec2_instance_name }}" \
          --query "Reservations[*].Instances[*].InstanceId" \
          --output text)
        
        if [ -z "$INSTANCE_ID" ]; then
          echo "EC2 instance with the name '${{ github.event.inputs.ec2_instance_name }}' not found"
          exit 1
        fi

        IP_ADDRESS=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query "Reservations[*].Instances[*].PublicIpAddress" \
          --output text)

        echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

    - name: Output IP Address
      run: |
        echo "The IP address is: ${{ env.IP_ADDRESS }}"
