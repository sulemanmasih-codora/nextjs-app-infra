name: Get EC2 IP Address

on:
  workflow_dispatch:
    inputs:
      ec2_instance_name:
        description: 'The name of the EC2 instance'
        required: true
      apply_changes:
        description: 'Apply changes (true/false)'
        default: 'false'

jobs:
  get-ec2-ip:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Determine Environment
      id: determine_env
      run: |
        EC2_INSTANCE_NAME="${{ github.event.inputs.ec2_instance_name }}"

        if [[ "$EC2_INSTANCE_NAME" == *"lexim-dev"* ]]; then
          ENV_NAME="lexim-dev"
        elif [[ "$EC2_INSTANCE_NAME" == *"lexim-stage"* ]]; then
          ENV_NAME="lexim-stage"
        elif [[ "$EC2_INSTANCE_NAME" == *"lexim-prod"* ]]; then
          ENV_NAME="lexim-prod"
        elif [[ "$EC2_INSTANCE_NAME" == *"dbg-dev"* ]]; then
          ENV_NAME="dbg-dev"
        elif [[ "$EC2_INSTANCE_NAME" == *"dbg-stage"* ]]; then
          ENV_NAME="dbg-stage"
        elif [[ "$EC2_INSTANCE_NAME" == *"dbg-prod"* ]]; then
          ENV_NAME="dbg-prod"
        elif [[ "$EC2_INSTANCE_NAME" == *"custody-dev"* ]]; then
          ENV_NAME="custody-dev"
        elif [[ "$EC2_INSTANCE_NAME" == *"custody-stage"* ]]; then
          ENV_NAME="custody-stage"
        elif [[ "$EC2_INSTANCE_NAME" == *"tcp-dev"* ]]; then
          ENV_NAME="tcp-dev"
        elif [[ "$EC2_INSTANCE_NAME" == *"tcp-prod"* ]]; then
          ENV_NAME="tcp-prod"
        elif [[ "$EC2_INSTANCE_NAME" == *"dau-vault-prod"* ]]; then
          ENV_NAME="dau-vault-prod"
        else
          echo "Unknown environment for EC2 instance: $EC2_INSTANCE_NAME"
          exit 1
        fi

        echo "ENV_NAME=$ENV_NAME" >> $GITHUB_ENV

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use the same secret
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Use the same secret
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Debug AWS Secrets
      run: |
        if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          echo "AWS_ACCESS_KEY_ID is not set"
        else
          echo "AWS_ACCESS_KEY_ID is set"
        fi

    - name: Retrieve EC2 IP Address
      id: get_ip
      run: |
        INSTANCE_ID=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=${{ github.event.inputs.ec2_instance_name }}" \
          --query "Reservations[*].Instances[*].InstanceId" \
          --output text)

        if [ -z "$INSTANCE_ID" ]; then
          echo "EC2 instance with the name '${{ github.event.inputs.ec2_instance_name }}' not found"
          exit 1
        fi

        IP_ADDRESS=$(aws ec2 describe-instances \
          --instance-ids $INSTANCE_ID \
          --query "Reservations[*].Instances[*].PublicIpAddress" \
          --output text)

        echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

    - name: Output IP Address
      run: |
        echo "The IP address is: ${{ env.IP_ADDRESS }}"
